<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="example.infrastructure.datasource.user.UserMapper">

    <resultMap id="user" type="example.domain.model.user.User">
        <id property="identifier.value" column="user_id"/>
        <result property="name.value" column="name"/>
        <result property="mailAddress.value" column="メールアドレス"/>
        <result property="dateOfBirth.value" column="date_of_birth"/>
        <result property="phoneNumber.value" column="phone_number"/>
        <result property="gender.value" column="gender"/>
    </resultMap>

    <resultMap id="userSummary" type="example.domain.model.user.UserSummary">
        <id property="identifier.value" column="user_id"/>
        <result property="name.value" column="name"/>
        <result property="mailAddress.value" column="メールアドレス"/>
        <result property="dateOfBirth.value" column="date_of_birth"/>
    </resultMap>

    <select id="findBy" resultMap="user">
        SELECT
            ユーザー.user_id,
            ユーザー.name,
            ユーザーメールアドレス.メールアドレス,
            ユーザー.date_of_birth,
            ユーザー.phone_number,
            ユーザー.gender
        FROM 給与.ユーザー as ユーザー
          INNER JOIN 給与.ユーザーメールアドレス対応表 as ユーザーメールアドレス対応表 on ( 
            ユーザー.user_id = ユーザーメールアドレス対応表.ユーザーID
          ) INNER JOIN 給与.ユーザーメールアドレス as ユーザーメールアドレス on (
            ユーザーメールアドレス対応表.ユーザーメールアドレスID = ユーザーメールアドレス.ユーザーメールアドレスID
          )
        WHERE ユーザー.user_id = #{identifier.value}
    </select>

    <select id="list" resultMap="userSummary">
        SELECT
            ユーザー.user_id,
            ユーザー.name,
            ユーザーメールアドレス.メールアドレス,
            ユーザー.date_of_birth
        FROM 給与.ユーザー as ユーザー
          INNER JOIN 給与.ユーザーメールアドレス対応表 as ユーザーメールアドレス対応表 on ( 
            ユーザー.user_id = ユーザーメールアドレス対応表.ユーザーID
          ) INNER JOIN 給与.ユーザーメールアドレス as ユーザーメールアドレス on (
            ユーザーメールアドレス対応表.ユーザーメールアドレスID = ユーザーメールアドレス.ユーザーメールアドレスID
          )
        ORDER BY ユーザー.user_id;
    </select>

    <insert id="registerUser">
        INSERT INTO 給与.ユーザー (user_id, name, date_of_birth, phone_number, gender)
        VALUES (#{user.identifier.value}, #{user.name.value}, #{user.dateOfBirth.value}, #{user.phoneNumber.value},
                #{user.gender.value});
    </insert>

    <insert id="registerMailAddress">
        INSERT INTO 給与.ユーザーメールアドレス (ユーザーメールアドレスID, ユーザーID, メールアドレス, 登録日時)
        VALUES (#{id}, #{user.identifier.value}, #{user.mailAddress.value}, now());
	</insert>
	
    <insert id="registerMailAddressMapper">
        INSERT INTO 給与.ユーザーメールアドレス対応表 (ユーザーID, ユーザーメールアドレスID)
        VALUES (#{userId.value}, #{mailAddressId});
	</insert>
	
    <delete id="delete">
        DELETE FROM 給与.ユーザー
        WHERE user_id = #{user.identifier.value}
    </delete>
</mapper>