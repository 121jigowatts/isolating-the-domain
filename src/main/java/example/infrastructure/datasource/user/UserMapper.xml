<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="example.infrastructure.datasource.user.UserMapper">

    <resultMap id="user" type="example.domain.model.user.User">
        <id property="identifier.value" column="user_id"/>
        <result property="name.value" column="name"/>
        <result property="dateOfBirth.value" column="date_of_birth"/>
        <result property="phoneNumber.value" column="phone_number"/>
        <result property="gender.value" column="gender"/>
    </resultMap>

    <resultMap id="userSummary" type="example.domain.model.user.UserSummary">
        <id property="identifier.value" column="user_id"/>
        <result property="name.value" column="name"/>
        <result property="mailAddress.value" column="mail_address"/>
        <result property="dateOfBirth.value" column="date_of_birth"/>
    </resultMap>

    <select id="findBy" resultMap="user">
        SELECT
            user_id,
            name,
            date_of_birth,
            phone_number,
            gender
        FROM users.users
        WHERE user_id = #{identifier.value}
    </select>

    <select id="list" resultMap="userSummary">
        SELECT
            user.user_id,
            user.name,
            users_mail_address.mail_address,
            user.date_of_birth
        FROM users.users as user
          INNER JOIN (
            SELECT 
              user_id,
              max(register_date) as register_date
            FROM
              users.users_mail_address
            GROUP BY
              user_id
          ) AS leatest on (
            user.user_id = leatest.user_id
          ) INNER JOIN users.users_mail_address as users_mail_address on (
            user.user_id = users_mail_address.user_id
            and leatest.register_date = users_mail_address.register_date
          )          
        ORDER BY user.user_id;
    </select>

    <insert id="register">
        INSERT INTO users.users (user_id, name, date_of_birth, phone_number, gender)
        VALUES (#{user.identifier.value}, #{user.name.value}, #{user.dateOfBirth.value}, #{user.phoneNumber.value},
                #{user.gender.value});
    </insert>

    <delete id="delete">
        DELETE FROM users.users
        WHERE user_id = #{user.identifier.value}
    </delete>
</mapper>