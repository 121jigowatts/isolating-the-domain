<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="example.infrastructure.datasource.user.UserMapper">

    <resultMap id="user" type="example.domain.model.user.User">
        <id property="identifier.value" column="user_id"/>
        <result property="name.value" column="ユーザー名"/>
        <result property="mailAddress.value" column="メールアドレス"/>
        <result property="dateOfBirth.value" column="誕生日"/>
        <result property="phoneNumber.value" column="電話番号"/>
        <result property="gender.value" column="gender"/>
    </resultMap>

    <resultMap id="userSummary" type="example.domain.model.user.UserSummary">
        <id property="identifier.value" column="user_id"/>
        <result property="name.value" column="ユーザー名"/>
        <result property="mailAddress.value" column="メールアドレス"/>
        <result property="dateOfBirth.value" column="誕生日"/>
    </resultMap>

    <select id="findBy" resultMap="user">
        SELECT
            ユーザー.user_id,
            ユーザー名.ユーザー名,
            ユーザーメールアドレス.メールアドレス,
            ユーザー誕生日.誕生日,
            ユーザー電話番号.電話番号,
            ユーザー.gender
        FROM 給与.ユーザー as ユーザー
          INNER JOIN 給与.ユーザー名対応表 as ユーザー名対応表 on (
            ユーザー.user_id = ユーザー名対応表.ユーザーID
          ) INNER JOIN 給与.ユーザー名 as ユーザー名 on (
            ユーザー名対応表.ユーザー名ID = ユーザー名.ユーザー名ID
          ) INNER JOIN 給与.ユーザー電話番号対応表 as ユーザー電話番号対応表 on ( 
            ユーザー.user_id = ユーザー電話番号対応表.ユーザーID
          ) INNER JOIN 給与.ユーザー電話番号 as ユーザー電話番号 on (
            ユーザー電話番号対応表.ユーザー電話番号ID = ユーザー電話番号.ユーザー電話番号ID
          ) INNER JOIN 給与.ユーザーメールアドレス対応表 as ユーザーメールアドレス対応表 on ( 
            ユーザー.user_id = ユーザーメールアドレス対応表.ユーザーID
          ) INNER JOIN 給与.ユーザーメールアドレス as ユーザーメールアドレス on (
            ユーザーメールアドレス対応表.ユーザーメールアドレスID = ユーザーメールアドレス.ユーザーメールアドレスID
          ) INNER JOIN 給与.ユーザー誕生日対応表 as ユーザー誕生日対応表 on ( 
            ユーザー.user_id = ユーザー誕生日対応表.ユーザーID
          ) INNER JOIN 給与.ユーザー誕生日 as ユーザー誕生日 on (
            ユーザー誕生日対応表.ユーザー誕生日ID = ユーザー誕生日.ユーザー誕生日ID
          )
        WHERE ユーザー.user_id = #{identifier.value}
    </select>

    <select id="list" resultMap="userSummary">
        SELECT
            ユーザー.user_id,
            ユーザー名.ユーザー名,
            ユーザーメールアドレス.メールアドレス,
            ユーザー誕生日.誕生日
        FROM 給与.ユーザー as ユーザー
          INNER JOIN 給与.ユーザー名対応表 as ユーザー名対応表 on (
            ユーザー.user_id = ユーザー名対応表.ユーザーID
          ) INNER JOIN 給与.ユーザー名 as ユーザー名 on (
            ユーザー名対応表.ユーザー名ID = ユーザー名.ユーザー名ID
          ) INNER JOIN 給与.ユーザーメールアドレス対応表 as ユーザーメールアドレス対応表 on ( 
            ユーザー.user_id = ユーザーメールアドレス対応表.ユーザーID
          ) INNER JOIN 給与.ユーザーメールアドレス as ユーザーメールアドレス on (
            ユーザーメールアドレス対応表.ユーザーメールアドレスID = ユーザーメールアドレス.ユーザーメールアドレスID
          ) INNER JOIN 給与.ユーザー誕生日対応表 as ユーザー誕生日対応表 on ( 
            ユーザー.user_id = ユーザー誕生日対応表.ユーザーID
          ) INNER JOIN 給与.ユーザー誕生日 as ユーザー誕生日 on (
            ユーザー誕生日対応表.ユーザー誕生日ID = ユーザー誕生日.ユーザー誕生日ID
          )
        ORDER BY ユーザー.user_id;
    </select>

    <insert id="registerUser">
        INSERT INTO 給与.ユーザー (user_id, gender)
        VALUES (#{user.identifier.value}, #{user.gender.value});
    </insert>

    <insert id="registerName">
        INSERT INTO 給与.ユーザー名 (ユーザー名ID, ユーザーID, ユーザー名, 登録日時)
        VALUES (#{id}, #{user.identifier.value}, #{user.name.value}, now());
	</insert>
	
    <insert id="registerNameMapper">
        INSERT INTO 給与.ユーザー名対応表 (ユーザーID, ユーザー名ID)
        VALUES (#{userId.value}, #{nameId});
	</insert>

    <insert id="registerPhoneNumber">
        INSERT INTO 給与.ユーザー電話番号 (ユーザー電話番号ID, ユーザーID, 電話番号, 登録日時)
        VALUES (#{id}, #{user.identifier.value}, #{user.phoneNumber.value}, now());
	</insert>
	
    <insert id="registerPhoneNumberMapper">
        INSERT INTO 給与.ユーザー電話番号対応表 (ユーザーID, ユーザー電話番号ID)
        VALUES (#{userId.value}, #{phoneNumberId});
	</insert>

    <insert id="registerMailAddress">
        INSERT INTO 給与.ユーザーメールアドレス (ユーザーメールアドレスID, ユーザーID, メールアドレス, 登録日時)
        VALUES (#{id}, #{user.identifier.value}, #{user.mailAddress.value}, now());
	</insert>
	
    <insert id="registerMailAddressMapper">
        INSERT INTO 給与.ユーザーメールアドレス対応表 (ユーザーID, ユーザーメールアドレスID)
        VALUES (#{userId.value}, #{mailAddressId});
	</insert>
	
    <insert id="registerDateOfBirth">
        INSERT INTO 給与.ユーザー誕生日 (ユーザー誕生日ID, ユーザーID, 誕生日, 登録日時)
        VALUES (#{id}, #{user.identifier.value}, #{user.dateOfBirth.value}, now());
	</insert>
	
    <insert id="registerDateOfBirthMapper">
        INSERT INTO 給与.ユーザー誕生日対応表 (ユーザーID, ユーザー誕生日ID)
        VALUES (#{userId.value}, #{dateOfBirthId});
	</insert>

    <delete id="delete">
        DELETE FROM 給与.ユーザー
        WHERE user_id = #{user.identifier.value}
    </delete>
</mapper>