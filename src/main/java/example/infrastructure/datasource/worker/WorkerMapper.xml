<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="example.infrastructure.datasource.worker.WorkerMapper">

    <resultMap id="worker" type="example.domain.model.worker.Worker">
        <id property="workerNumber.value" column="ユーザーID"/>
        <result property="name.value" column="ユーザー名"/>
        <result property="mailAddress.value" column="メールアドレス"/>
        <result property="phoneNumber.value" column="電話番号"/>
    </resultMap>

    <select id="selectByWorkerNumber" resultMap="worker">
        SELECT
        ユーザー.ユーザーID,
        ユーザー名.ユーザー名,
        ユーザーメールアドレス.メールアドレス,
        ユーザー電話番号.電話番号
        FROM 給与.ユーザー as ユーザー
        INNER JOIN 給与.ユーザー名対応表 as ユーザー名対応表 on (
        ユーザー.ユーザーID = ユーザー名対応表.ユーザーID
        ) INNER JOIN 給与.ユーザー名 as ユーザー名 on (
        ユーザー名対応表.ユーザー名ID = ユーザー名.ユーザー名ID
        ) INNER JOIN 給与.ユーザー電話番号対応表 as ユーザー電話番号対応表 on (
        ユーザー.ユーザーID = ユーザー電話番号対応表.ユーザーID
        ) INNER JOIN 給与.ユーザー電話番号 as ユーザー電話番号 on (
        ユーザー電話番号対応表.ユーザー電話番号ID = ユーザー電話番号.ユーザー電話番号ID
        ) INNER JOIN 給与.ユーザーメールアドレス対応表 as ユーザーメールアドレス対応表 on (
        ユーザー.ユーザーID = ユーザーメールアドレス対応表.ユーザーID
        ) INNER JOIN 給与.ユーザーメールアドレス as ユーザーメールアドレス on (
        ユーザーメールアドレス対応表.ユーザーメールアドレスID = ユーザーメールアドレス.ユーザーメールアドレスID
        ) LEFT OUTER JOIN 給与.削除済みユーザー as 削除済みユーザー on (
        ユーザー.ユーザーID = 削除済みユーザー.ユーザーID
        )
        WHERE ユーザー.ユーザーID = #{workerNumber.value} AND 削除済みユーザー.ユーザーID IS NULL
    </select>

    <select id="selectContracts" resultMap="worker">
        SELECT
        ユーザー.ユーザーID,
        ユーザー名.ユーザー名,
        ユーザーメールアドレス.メールアドレス,
        ユーザー電話番号.電話番号
        FROM 給与.ユーザー as ユーザー
        INNER JOIN 給与.ユーザー名対応表 as ユーザー名対応表 on (
        ユーザー.ユーザーID = ユーザー名対応表.ユーザーID
        ) INNER JOIN 給与.ユーザー名 as ユーザー名 on (
        ユーザー名対応表.ユーザー名ID = ユーザー名.ユーザー名ID
        ) INNER JOIN 給与.ユーザー電話番号対応表 as ユーザー電話番号対応表 on (
        ユーザー.ユーザーID = ユーザー電話番号対応表.ユーザーID
        ) INNER JOIN 給与.ユーザー電話番号 as ユーザー電話番号 on (
        ユーザー電話番号対応表.ユーザー電話番号ID = ユーザー電話番号.ユーザー電話番号ID
        ) INNER JOIN 給与.ユーザーメールアドレス対応表 as ユーザーメールアドレス対応表 on (
        ユーザー.ユーザーID = ユーザーメールアドレス対応表.ユーザーID
        ) INNER JOIN 給与.ユーザーメールアドレス as ユーザーメールアドレス on (
        ユーザーメールアドレス対応表.ユーザーメールアドレスID = ユーザーメールアドレス.ユーザーメールアドレスID
        ) LEFT OUTER JOIN 給与.削除済みユーザー as 削除済みユーザー on (
        ユーザー.ユーザーID = 削除済みユーザー.ユーザーID
        )
        WHERE 削除済みユーザー.ユーザーID IS NULL
        ORDER BY ユーザー.ユーザーID;
    </select>

    <select id="newWorkerNumber" resultType="Long">
        select nextval('給与.ユーザーIDシーケンサー')
    </select>
    <insert id="insertWorker">
        INSERT INTO 給与.ユーザー (ユーザーID, 登録日時) VALUES (#{workerNumber.value}, now());
    </insert>

    <select id="newWorkerNameIdentifier" resultType="Long">
        select nextval('給与.ユーザー名IDシーケンサー')
    </select>
    <insert id="insertName">
        INSERT INTO 給与.ユーザー名 (ユーザー名ID, ユーザーID, ユーザー名, 登録日時)
        VALUES (#{id}, #{workerNumber.value}, #{name.value}, now());
    </insert>

    <insert id="insertNameMapper">
        INSERT INTO 給与.ユーザー名対応表 (ユーザーID, ユーザー名ID)
        VALUES (#{workerNumber.value}, #{nameId});
    </insert>

    <select id="newWorkerPhoneNumberIdentifier" resultType="Long">
        select nextval('給与.ユーザー電話番号IDシーケンサー')
    </select>
    <insert id="insertPhoneNumber">
        INSERT INTO 給与.ユーザー電話番号 (ユーザー電話番号ID, ユーザーID, 電話番号, 登録日時)
        VALUES (#{id}, #{workerNumber.value}, #{phoneNumber.value}, now());
    </insert>

    <insert id="insertPhoneNumberMapper">
        INSERT INTO 給与.ユーザー電話番号対応表 (ユーザーID, ユーザー電話番号ID)
        VALUES (#{workerNumber.value}, #{phoneNumberId});
    </insert>

    <select id="newWorkerMailAddressIdentifier" resultType="Long">
        select nextval('給与.ユーザーメールアドレスIDシーケンサー')
    </select>
    <insert id="insertMailAddress">
        INSERT INTO 給与.ユーザーメールアドレス (ユーザーメールアドレスID, ユーザーID, メールアドレス, 登録日時)
        VALUES (#{id}, #{workerNumber.value}, #{mailAddress.value}, now());
    </insert>

    <insert id="insertMailAddressMapper">
        INSERT INTO 給与.ユーザーメールアドレス対応表 (ユーザーID, ユーザーメールアドレスID)
        VALUES (#{workerNumber.value}, #{mailAddressId});
    </insert>

    <delete id="deleteNameMapper">
        DELETE FROM 給与.ユーザー名対応表 WHERE ユーザーID = #{workerNumber.value}
    </delete>

    <delete id="deletePhoneNumberMapper">
        DELETE FROM 給与.ユーザー電話番号対応表 WHERE ユーザーID = #{workerNumber.value}
    </delete>

    <delete id="deleteMailAddressMapper">
        DELETE FROM 給与.ユーザーメールアドレス対応表 WHERE ユーザーID = #{workerNumber.value}
    </delete>

    <insert id="insertExpireContract">
        INSERT INTO 給与.削除済みユーザー (ユーザーID, 登録日時)
        VALUES (#{worker.workerNumber.value}, now());
    </insert>
</mapper>