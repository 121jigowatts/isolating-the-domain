<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="example.infrastructure.datasource.worker.WorkerMapper">

    <resultMap id="worker" type="example.domain.model.worker.Worker">
        <id property="workerNumber.value" column="従業員ID"/>
        <result property="name.value" column="従業員名"/>
        <result property="mailAddress.value" column="メールアドレス"/>
        <result property="phoneNumber.value" column="電話番号"/>
    </resultMap>

    <select id="selectByWorkerNumber" resultMap="worker">
        SELECT
        従業員.従業員ID,
        従業員の名前.従業員名,
        従業員のメールアドレス.メールアドレス,
        従業員の電話番号.電話番号
        FROM 給与.従業員 as 従業員
        INNER JOIN 給与.従業員の名前 as 従業員の名前 on (
        従業員.従業員ID = 従業員の名前.従業員ID
        ) INNER JOIN 給与.従業員の電話番号 as 従業員の電話番号 on (
        従業員.従業員ID = 従業員の電話番号.従業員ID
        ) INNER JOIN 給与.従業員のメールアドレス as 従業員のメールアドレス on (
        従業員.従業員ID = 従業員のメールアドレス.従業員ID
        ) INNER JOIN 給与.契約中 as 契約中 on (
        従業員.従業員ID = 契約中.従業員ID
        )
        WHERE 従業員.従業員ID = #{workerNumber.value}
    </select>

    <select id="selectContracts" resultMap="worker">
        SELECT
        従業員.従業員ID,
        従業員の名前.従業員名,
        従業員のメールアドレス.メールアドレス,
        従業員の電話番号.電話番号
        FROM 給与.従業員 as 従業員
        INNER JOIN 給与.従業員の名前 as 従業員の名前 on (
        従業員.従業員ID = 従業員の名前.従業員ID
        ) INNER JOIN 給与.従業員の電話番号 as 従業員の電話番号 on (
        従業員.従業員ID = 従業員の電話番号.従業員ID
        ) INNER JOIN 給与.従業員のメールアドレス as 従業員のメールアドレス on (
        従業員.従業員ID = 従業員のメールアドレス.従業員ID
        ) INNER JOIN 給与.契約中 as 契約中 on (
        従業員.従業員ID = 契約中.従業員ID
        )
        ORDER BY 従業員.従業員ID;
    </select>

    <select id="newWorkerNumber" resultType="Integer">
        select nextval('給与.従業員ID')
    </select>
    <insert id="insertWorker">
        INSERT INTO 給与.従業員 (従業員ID) VALUES (#{workerNumber.value});
    </insert>

    <select id="newWorkerNameIdentifier" resultType="Integer">
        select nextval('給与.従業員名ID')
    </select>
    <insert id="insertWorkerNameHistory">
        INSERT INTO 給与.従業員の名前履歴 (従業員名ID, 従業員ID, 従業員名)
        VALUES (#{id}, #{workerNumber.value}, #{name.value});
    </insert>

    <insert id="insertWorkerName">
        INSERT INTO 給与.従業員の名前 (従業員ID, 従業員名ID, 従業員名)
        VALUES (#{workerNumber.value}, #{nameId}, #{name.value});
    </insert>

    <select id="newWorkerPhoneNumberIdentifier" resultType="Integer">
        select nextval('給与.従業員電話番号ID')
    </select>
    <insert id="insertWorkerPhoneNumberHistory">
        INSERT INTO 給与.従業員の電話番号履歴 (従業員電話番号ID, 従業員ID, 電話番号)
        VALUES (#{id}, #{workerNumber.value}, #{phoneNumber.value});
    </insert>

    <insert id="insertWorkerPhoneNumber">
        INSERT INTO 給与.従業員の電話番号 (従業員ID, 従業員電話番号ID, 電話番号)
        VALUES (#{workerNumber.value}, #{phoneNumberId}, #{phoneNumber.value});
    </insert>

    <select id="newWorkerMailAddressIdentifier" resultType="Integer">
        select nextval('給与.従業員メールアドレスID')
    </select>
    <insert id="insertWorkerMailAddressHistory">
        INSERT INTO 給与.従業員のメールアドレス履歴 (従業員メールアドレスID, 従業員ID, メールアドレス)
        VALUES (#{id}, #{workerNumber.value}, #{mailAddress.value});
    </insert>

    <insert id="insertWorkerMailAddress">
        INSERT INTO 給与.従業員のメールアドレス (従業員ID, メールアドレス)
        VALUES (#{workerNumber.value}, #{mailAddress.value});
    </insert>

    <delete id="deleteWorkerName">
        DELETE FROM 給与.従業員の名前 WHERE 従業員ID = #{workerNumber.value}
    </delete>

    <delete id="deleteWorkerPhoneNumber">
        DELETE FROM 給与.従業員の電話番号 WHERE 従業員ID = #{workerNumber.value}
    </delete>

    <delete id="deleteWorkerMailAddress">
        DELETE FROM 給与.従業員のメールアドレス WHERE 従業員ID = #{workerNumber.value}
    </delete>

    <insert id="insertInspireContract">
        INSERT INTO 給与.契約中 (従業員ID) VALUES (#{workerNumber.value});
    </insert>

    <delete id="deleteInspireContract">
        DELETE FROM 給与.契約中 WHERE 従業員ID = #{workerNumber.value}
    </delete>


    <insert id="insertExpireContract">
        INSERT INTO 給与.契約終了 (従業員ID) VALUES (#{workerNumber.value});
    </insert>
</mapper>